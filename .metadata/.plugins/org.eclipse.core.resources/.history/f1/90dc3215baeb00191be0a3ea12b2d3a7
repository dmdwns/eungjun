package asdf;

public class Asdf {

	public static void main(String[] args) {
		/* String 사용 실습
	문자열 : "홍길동","이순신","이순신","을지문덕","김유신","연개소문","Tom","TOM"
	1. 위의 문자열 값을 저장할 수 있는 문자열 배열(names) 변수를 선언하고 입력
	2. 배열에 있는 값을 구분자 콤마(,)로 구분하여 한 라인에 출력
	  출력 예) 홍길동,이순신,이순신,을지문덕.... 반복문 
	3. 배열에 있는 데이타의 첫 글자만 출력-구분자 콤마(,) 사용 한 라인에 출력
	   출력 예) 홍,이,이,을,김,연,T,T... 스트링클래스 이용해서 반복문도 사용  문자열붙이기 쓰기 
	4. 이름의 글자수가 4글자 이상인 이름을 검색해서 "인덱스번호:이름" 형태로 출력
	   예) 3:을지문덕  스트링클래스 이용해서 반복문 처리 
	
		========================================================= */
		//"홍길동","이순신","이순신","을지문덕","김유신","연개소문","Tom","TOM"
		String[] names = {"홍길동","이순신","이순신","을지문덕",
				"김유신","연개소문","Tom","TOM"};
                 	//8개
		System.out.println("한라인에 출력 : ");
		for(int i = 0 ; i <= 7 ; i++) {
			System.out.print(names[i]+",");
		}
		
		
		System.out.println();
	 	System.out.println("==========================");
	 	System.out.println();
	 	System.out.println();
// 	String result = a.concat(b).concat(c).concat("!!!!");
//	 	3. 배열에 있는 데이타의 첫 글자만 출력-구분자 콤마(,) 사용 한 라인에 출력
//		   출력 예) 홍,이,이,을,김,연,T,T... 스트링클래스 이용해서 반복문도 사용  문자열붙이기 쓰기 
	 	
	 
	 	System.out.println("첫글자 출력   , 기준  "  );
	 	for(int i = 0 ; i <= 7 ; i++) {
	 	  names[i] = names[i].substring(0,1);
	 	System.out.print(names[i]+",");
	 	}
	 	
	 	
	 	System.out.println();
	 	System.out.println();
	 	System.out.println("==========================");
	 	System.out.println();
	 	
//	 	for(int i = 0 ; i<=0 ; i ++ ) {
//		  for(int k = 1; k<=7; k ++) {
//		  names[0].concat(", "+names[k]);
//		  }
//	 		
//		 }
		
	  	 
	 	
	 	
	 	
	 	String word[] = {"홍길동","이순신","이순신","을지문덕",
				"김유신","연개소문","Tom","TOM"};
	 	     System.out.print("4개 글자인것 :");
	 	for(int i = 0 ; i <= 7 ; i++) {
	 		if (word[i].length() == 4 ) {
	 			System.out.print("word["+i+"]"+ word[i]);
	 		}
	 	}
	 	System.out.println();
	 	System.out.println("===========================");
	 	System.out.println();
	 	System.out.println();
	 	
	 	
	 	
//	 	5. 이름이 같은 데이터를 "인덱스번호:이름=인덱스번호:이름" 형태로 출력
//		   예) 1:이순신=2:이순신  스트링클래스  이것도 반복문처리;; 
//		(기타) 이름 비교시에는 대소문자 구분 없이 비교처리(Tom, TOM 은 같다) ignore케이스 같은데이터로 처리
	 	
	   System.out.println("대소문자 관계없이 같은 이름들 찾기 ");
	   System.out.println("===========================");
	 	for(int i = 0 ; i<=6; i ++) {
	 	  if(word[i].equalsIgnoreCase(word[i+1])) {
	 		   System.out.println("word["+i+"] :" + word[i] +
	 				   " = word[" +(i+1)+ "]" + word[i+1] );
	 	  } 
	   	}
	 	
	}

}


}
